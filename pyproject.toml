[project]
name = "Perception"
version = "0.0.0"
description = "Perception provides flexible, well-documented, and comprehensively tested tooling for perceptual hashing research, development, and production use."
authors = [{ name = "Thorn", email = "info@wearethorn.org" }]
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = ["opencv-contrib-python-headless (>=4.10,<5.0)"]

[tool.poetry.dependencies]
python = "^3.10"
Cython = "^3"
numpy = ">=1.26.4, <3"
opencv-contrib-python-headless = "^4.10"
pandas = "*"
pdqhash = "^0.2.7"
Pillow = "*"
pywavelets = "^1.5.0"
tqdm = "*"
validators = ">=0.22, <1.0"

# Benchmarking Extras
matplotlib = { version = "*", optional = true }
scipy = { version = "*", optional = true }
albumentations = { version = "^2.0.8", optional = true }
tabulate = { version = "*", optional = true }
scikit-learn = { version = "*", optional = true }
ffmpeg-python = { version = "*", optional = true }

# Matching Extras
aiohttp = { version = "*", optional = true }
python-json-logger = { version = "*", optional = true }
rich = "^13.7.0"

# Experimental Extras
networkit = [
  { version = "^11.1", optional = true, markers = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
  { git = "https://github.com/networkit/networkit.git", optional = true, markers = "sys_platform != 'linux' or platform_machine != 'x86_64'" }
]
faiss-cpu = { version = "^1.8.0.post1", optional = true }

[project.optional-dependencies]
benchmarking = [
  "matplotlib",
  "scipy",
  "albumentations",
  "tabulate",
  "scikit-learn",
  "ffmpeg-python",
]
matching = ["aiohttp", "python-json-logger"]
experimental = ["networkit", "faiss-cpu"]


[tool.poetry.group.dev.dependencies]
black = "^24"
coverage = "*"
ipython = "*"
mypy = "*"
pandas-stubs = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
ruff = "*"
types-pillow = "*"
types-tqdm = "*"
twine = "*"
albumentations = "^2.0.8"


[tool.poetry.build]
script = "build.py"
generate-setup-file = true

[tool.mypy]
exclude = ["/tests/"]
check_untyped_defs = true
ignore_missing_imports = true

[tool.poetry-dynamic-versioning]
enable = true

[build-system]
requires = [
  "poetry-core",
  "poetry-dynamic-versioning",
  "numpy",
  "Cython",
  "setuptools",
  "wheel",
]
build-backend = "poetry_dynamic_versioning.backend"
